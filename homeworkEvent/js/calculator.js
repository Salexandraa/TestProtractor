class Calculator {
    constructor() {
        Object.defineProperty(this, 'inp', { value: this.input })
    }
    equal() {
        let input = document.getElementById('txt')
        let inp = document.getElementById('txt').innerText
        if (inp) {
            input.value = eval(inp)

        }
    }

    click(e) {
        let input = document.getElementById('txt')

        if (e.target.tagName === 'table') {
            input.value = ''
        }
        else {
            input.value += e.target.innerText
        }

        if (e.target.innerHTML === 'C') {
            input.value = ''
        }
        if (e.target.innerHTML === 'ü†à') {
            let inp = document.getElementById('txt').innerText
            input.value = inp.substring(0, length - 1)

        }
        if(e.target.innerHTML === '='){
            let inp =document.getElementById('txt').innerText
           if (inp) {
               input.value = eval(inp)

           }
        }
        this.render
    }
    //
     // addNumber(number) {
        //     //–¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –≤ —ñ–Ω–ø—É—Ç
        //     //—è–∫—â–æ –≤–∂–µ —î –∫—Ä–∞–ø–∫–∞ 
        //     if (number === '.' && this.currentOperand.includes('.'))
        //         return
        //     this.currentOperand = this.currentOperand.toString() + number.toString()
    
        // }
        // operation(operation) {
        //     if (this.currentOperand === '')
        //         return
        //     if (this.previsiousOperand !== '') {
        //         this.equal()//—è–∫—â–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –æ–ø–µ—Ä–∞–Ω–¥ –Ω–µ –¥–æ—Ä—ñ–≤–Ω—é—î –ø—É—Å—Ç—ñ–π —Å—Ç—Ä–æ—Ü—ñ —Ç–æ –≤–∏–∫–æ–Ω—É—î–º–æ –æ–ø–µ—Ä–∞—Ü—ñ—é –∑ —Ñ—É–Ω–∫—Ü—ñ—ó
        //     }
        //     this.operations = operation
        //     this.previsiousOperand = this.currentOperand
        //     this.currentOperand = ''
    
        // }
        // equal() {
        //     let equal
        //     const prev = parseFloat(this.previsiousOperand)
        //     const current = parseFloat(this.currentOperand)
        //     if (isNaN(prev) || isNaN(current))
        //         return
        //     switch (this.operations) {
        //         case '+':
        //             computation = prev + current
        //             break
        //         case '-':
        //             computation = prev - current
        //             break
        //         case '*':
        //             computation = prev * current
        //             break
        //         case '/':
        //             computation = prev / current
        //             break
        //         default:
        //             return
        //     }
        //     this.currentOperand = equal//
        //     this.operations = undefined//—è–∫—â–æ –æ–ø–µ—Ä–∞—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
        //     this.previsiousOperand = ''//–º–∏–Ω—É–ª–∏–π –æ–ø–µ—Ä–∞–Ω–¥ –¥–æ—Ä—ñ–≤–Ω—é—î –ø—É—Å—Ç–æ–º—É –∑–Ω–∞—á–µ–Ω–Ω—é
        // }
    
    
        // updateDisplay() {//–∑–±–µ—Ä—ñ–≥–∞—î –º–∏–Ω—É–ª–∏–π –≤–≤–µ–¥–µ–Ω–Ω–∏–π –æ–ø–µ—Ä–∞–Ω–¥
        //     this.currentOperand.innerText = this.currentOperand
        //     if (this.operations != null) {//—è–∫—â–æ 
        //         this.previsiousOperand.innerText = this.previsiousOperand
        //             `${this.previsiousOperand} ${this.operations}`
        //     }
    
    
        // }
    
        // click(e) {
        //     let input = document.getElementById('txt')
        //     input.innerText =this.addNumber(e.target.innerText)
        //     input.innerText = this.updateDisplay()
    
    
        // }
        // delete() {
        //     let input = document.getElementById('txt')
        //     //–∫–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–∞ 1 ü†à
        //    input.value = input.
        //    this.render
            // clear() {
    //     //–∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –°
    //     this.currentOperand = ''
    //     this.previsiousOperand = ''
    //     this.operation = undefined
    // }

    render(conatinerId) {
        this.container = document.getElementById(conatinerId)
        this.container.innerHTML = ''
        this.container.backgroundColor = 'yellow'
        this.input = document.createElement('input')
        this.input.setAttribute('id', 'txt')

        this.table = document.createElement('table')
        this.table.setAttribute('border', '2px')
        this.table.style.width = '170px'
        this.table.style.backgroundColor = 'skyblue'
        this.table.setAttribute('id', 'tableButton')
        this.table.addEventListener('click', this.click)
        let tr = document.createElement('tr')
        let td = document.createElement('td')
        td.setAttribute('value', 9)
        td.innerText = '9'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '8'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '7'
        tr.appendChild(td)

        this.table.appendChild(tr)

        tr = document.createElement('tr')
        td = document.createElement('td')
        td.innerText = '6'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '5'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '4'
        tr.appendChild(td)

        this.table.appendChild(tr)

        tr = document.createElement('tr')
        td = document.createElement('td')
        td.innerText = '3'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '2'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '1'
        tr.appendChild(td)

        this.table.appendChild(tr)

        tr = document.createElement('tr')
        td = document.createElement('td')
        td.setAttribute('colspan', '2')
        td.style.textAlign = 'center'
        td.style.backgroundColor = 'blue'
        td.innerText = '0'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerText = '.'
        tr.appendChild(td)

        this.table.appendChild(tr)
        this.container.appendChild(this.input)
        this.container.appendChild(this.table)

    }

}
class CalculatorAcion extends Calculator {

    render(conatinerId) {
        super.render(conatinerId)

        let tr = document.createElement('tr')
        let td = document.createElement('td')
        td.innerHTML = '+'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerHTML = '-'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerHTML = '*'
        tr.appendChild(td)

        this.table.appendChild(tr)

        tr = document.createElement('tr')
        td = document.createElement('td')
        td.innerHTML = '/'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerHTML = '('
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerHTML = ')'
        tr.appendChild(td)

        this.table.appendChild(tr)

        tr = document.createElement('tr')
        td = document.createElement('td')
        td.style.backgroundColor = 'blue'
        td.innerText = 'C'
        tr.appendChild(td)

        td = document.createElement('td')
        td.innerHTML = 'ü†à'
        tr.appendChild(td)

        td = document.createElement('td')
        td.style.backgroundColor = 'blue'
        td.innerHTML = '='
        td.onclick = this.equal.bind(this)
        tr.appendChild(td)

        this.table.appendChild(tr)
        this.container.appendChild(this.table)
    }
}
window.onload = function () {
    let calculator = new Calculator()
    calculator.render('calculator')
}
